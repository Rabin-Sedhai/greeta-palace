<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Greeta-Rooms</title>
    <link rel="stylesheet" href="/css/nav.css">
    <link rel="stylesheet" href="/css/common.css">
    <link rel="stylesheet" href="/css/room.css">
</head>
<body>
    <%- include('./partials/nav.ejs') %>
    <%- include('./partials/common.ejs') %>
    <section class="roompage">

        <div class="filter">
            <div class="inputs">
                <label for="checkindate">Check In Date:</label>
                <input type="date" name="checkindate" id="checkInDate">
            </div>
            <div class="inputs">
                <label for="checkoutdate">Check Out Date:</label>
                <input type="date" name="checkoutdate" id="checkOutDate">
            </div>
            <div class="inputs">
                <button onclick="filterDate()" class="filterbtn" id="filterBtn">Check Availability</button>
            </div>
        </div>
        <h1>Available Rooms</h1>
        <h1 id="na"></h1>
        <div class="room-container" id="roomContainer">
            <!-- Rendered rooms will go here -->
        </div>
    </section>
    <%- include('./partials/commonscript.ejs') %>
    <script>

async function fetchRooms() {
    try {
        const response = await fetch('/api/getrooms');
        const data = await response.json();
        const rooms = data.Rooms;
        renderRooms(rooms);

        // Pass the renderRooms function as a callback to filterDate
        filterDate(rooms, renderRooms);
    } catch (error) {
        console.error('Error fetching rooms:', error);
    }
}


function filterDate() {
    const checkInDate = new Date(document.getElementById('checkInDate').value);
    const checkOutDate = new Date(document.getElementById('checkOutDate').value);

    const response = fetch('/api/getrooms');
    response.then(data => data.json()).then(data => {
        const rooms = data.Rooms;

        rooms.forEach(room => {
            const roomElement = document.querySelector(`[data-room-id="${room._id}"]`);

            if (roomElement && room.availableRooms > 0) { 
                const overlappingBookings = room.currentBookings.some(booking => {
                    const bookingCheckIn = new Date(booking.checkInDate);
                    const bookingCheckOut = new Date(booking.checkOutDate);
                    return (checkInDate <= bookingCheckOut && checkOutDate >= bookingCheckIn);
                });

                const wrapperElement = roomElement.closest('.wrapper');

                if (overlappingBookings) {
                    wrapperElement.style.display = 'none'; // Hide the wrapper if there are overlapping bookings
                } else {
                    wrapperElement.style.display = 'initial'; // Show the wrapper if no overlapping bookings
                }
            } else if (roomElement) { // If available rooms are 0, hide the room
                const wrapperElement = roomElement.closest('.wrapper');
                wrapperElement.style.display = 'none';
            }
        });

        // Call checkDateInputs function after filtering rooms
        checkDateInputs();
    });
}


    // Define checkDateInputs function
    function checkDateInputs() {
    const checkInDate = document.getElementById('checkInDate').value;
    const checkOutDate = document.getElementById('checkOutDate').value;
    const filterBtn = document.getElementById('filterBtn');

    if (!checkInDate || !checkOutDate) {
        filterBtn.disabled = true;
        filterBtn.style.cursor = 'not-allowed';
        document.querySelectorAll('.book-now-button').forEach(a => {
            a.style.display = 'none';
        });
    } else {
        const checkInDateObj = new Date(checkInDate);
        const checkOutDateObj = new Date(checkOutDate);

        if (checkOutDateObj <= checkInDateObj) {
            // Check-out date should be after check-in date
            filterBtn.disabled = true;
            filterBtn.style.cursor = 'not-allowed';
            document.querySelectorAll('.book-now-button').forEach(a => {
                a.style.display = 'none';
            });
        } else {
            filterBtn.disabled = false;
            filterBtn.style.cursor = 'pointer'
            document.querySelectorAll('.book-now-button').forEach(a => {
                a.style.display = 'initial';
            });
        }
    }
}

// Bind checkDateInputs function to input events
document.getElementById('checkInDate').oninput = checkDateInputs;
document.getElementById('checkOutDate').oninput = checkDateInputs;



function renderRooms(rooms) {
    const roomContainer = document.getElementById('roomContainer');
    roomContainer.innerHTML = '';
    rooms.forEach(room => {
        const wrapper = document.createElement('div');
        wrapper.classList.add('wrapper');
        wrapper.innerHTML = `
            <h1>${room.roomName}</h1>
            <div class="image i3" style="background-image: url(/uploads/${room.roomImg});"></div>
            <div class="details"><h1><em>${room.roomDesc}</em></h1>
            <div class="no-details">
            <p>Available Rooms: ${room.availableRooms}</p></div>
            </div>
            <h1>Rs.${room.price}</h1>
            <a href="#" class="book-now-button" data-room-id="${room._id}">Book Now</a>
        `;
        roomContainer.appendChild(wrapper);
    });
    document.querySelectorAll('.book-now-button').forEach(a => {
            a.addEventListener('click', function(event) {
                event.preventDefault();
                const roomId = this.dataset.roomId;
                const checkInDate = document.getElementById('checkInDate').value;
                const checkOutDate = document.getElementById('checkOutDate').value;
                const url = `/user/bookroom/${roomId}?checkInDate=${encodeURIComponent(checkInDate)}&checkOutDate=${encodeURIComponent(checkOutDate)}`;
                window.location.href = url;
            });
        });
}

fetchRooms();
    </script>
</body>
</html>
